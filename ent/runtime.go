// +build tools
// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/albe2669/spotify-viewer/ent/schema"
	"github.com/albe2669/spotify-viewer/ent/schema/pulid"
	"github.com/albe2669/spotify-viewer/ent/track"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	trackMixin := schema.Track{}.Mixin()
	trackMixinFields0 := trackMixin[0].Fields()
	_ = trackMixinFields0
	trackMixinFields1 := trackMixin[1].Fields()
	_ = trackMixinFields1
	trackFields := schema.Track{}.Fields()
	_ = trackFields
	// trackDescCreatedAt is the schema descriptor for created_at field.
	trackDescCreatedAt := trackMixinFields0[0].Descriptor()
	// track.DefaultCreatedAt holds the default value on creation for the created_at field.
	track.DefaultCreatedAt = trackDescCreatedAt.Default.(func() time.Time)
	// trackDescUpdatedAt is the schema descriptor for updated_at field.
	trackDescUpdatedAt := trackMixinFields0[1].Descriptor()
	// track.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	track.DefaultUpdatedAt = trackDescUpdatedAt.Default.(func() time.Time)
	// track.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	track.UpdateDefaultUpdatedAt = trackDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trackDescTrackID is the schema descriptor for track_id field.
	trackDescTrackID := trackFields[0].Descriptor()
	// track.TrackIDValidator is a validator for the "track_id" field. It is called by the builders before save.
	track.TrackIDValidator = trackDescTrackID.Validators[0].(func(string) error)
	// trackDescID is the schema descriptor for id field.
	trackDescID := trackMixinFields1[0].Descriptor()
	// track.DefaultID holds the default value on creation for the id field.
	track.DefaultID = trackDescID.Default.(func() pulid.ID)
}
